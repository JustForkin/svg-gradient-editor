{"version":3,"sources":["store/application/actions.ts","store/application/reducer.ts","utils/presets.ts","store/editor/actions.ts","utils/gradient.ts","store/editor/helpers.ts","store/editor/mutations.ts","store/editor/reducer.ts","store/reducers.ts","store/store.ts","styles/styledComponents.ts","styles/themes.ts","components/layout/StoreThemeProvider.tsx","styles/mixins.ts","views/editor/components/layout/EditorMain.tsx","views/editor/components/layout/EditorArea.tsx","views/editor/components/layout/EditorBar.tsx","components/editor/settings/layout.ts","styles/typography.ts","components/form/FormRow.tsx","components/form/FormButton.tsx","components/editor/settings/header/layout.ts","components/common/AppModal.tsx","store/application/selectors.ts","store/editor/selectors.ts","components/common/AppInput.tsx","components/presets/PresetForm.tsx","store/application/thunks.ts","components/form/FormLabel.tsx","components/form/FormSelect.tsx","components/editor/settings/header/preset_selector/PresetSelector.tsx","components/editor/settings/header/SettingsHeader.tsx","components/editor/settings/content/layout.ts","components/editor/settings/content/list_item/layout.ts","components/form/FormFieldset.tsx","components/editor/settings/content/list_item/colors/list/layout.ts","components/editor/settings/content/list_item/colors/color/layout.ts","store/editor/thunks.ts","components/editor/settings/content/list_item/colors/color/Color.tsx","components/editor/settings/content/list_item/colors/list/ColorList.tsx","components/form/FormSwitch.tsx","components/editor/settings/content/list_item/colors/header/ColorsHeader.tsx","components/editor/settings/content/list_item/colors/Colors.tsx","components/editor/settings/content/list_item/properties/type/GradientType.tsx","components/editor/settings/content/list_item/properties/focal_points/FocalPoints.tsx","components/editor/settings/content/list_item/properties/Properties.tsx","components/form/FormRange.tsx","components/editor/settings/content/list_item/attributes/Attributes.tsx","components/editor/settings/content/list_item/chroma/Chroma.tsx","components/editor/settings/content/list_item/ListItem.tsx","components/editor/settings/content/SettingsContent.tsx","components/editor/settings/Settings.tsx","components/editor/artboard/DefsRenderer.tsx","components/editor/artboard/FiguresRenderer.tsx","components/common/SaveIcon.tsx","components/editor/artboard/Artboard.tsx","views/editor/Editor.tsx","components/layout/GlobalStyles.ts","components/layout/ThemeSwitch.tsx","App.tsx","index.tsx","styles/fontFace.ts"],"names":["setTheme","createAction","resolve","theme","selectPreset","selectedPreset","openModal","closeModal","initialState","presets","itemsInStorage","Object","values","localStorage","length","map","item","JSON","parse","loadPresets","undefined","modal","loadGradients","gradients","addGradient","id","deleteGradient","addColor","payload","deleteColor","editColor","deleteAllColors","toggleChroma","setGradientType","setAttribute","toggleFocalPoints","replaceGradientAttributes","setChromaAttribute","computeChromaColors","gradientId","deleteAllGradients","createLinearScale","attrs","colors","lightnessCorrection","chroma","scale","mode","correctLightness","createBezierScale","bezier","getGradientIndex","state","findIndex","gradient","getColorIndex","gradientIndex","colorId","color","targetIndex","helpers","update","defineProperty","$push","Math","floor","random","output","$set","grad","_colors","c","concat","interpolation","rawResult","base","_rgb","val","filter","el","normalize","samples","i","push","createBase","offset","indexOf","error","rootReducer","combineReducers","application","arguments","action","type","getType","appActions","objectSpread","editor","EditorActions","focalPoints","useChroma","attributes","x1","y1","x2","y2","mutations","$splice","colorIndex","$toggle","attribute","value","middlewares","applyMiddleware","thunk","composed","compose","apply","store","createStore","toConsumableArray","styled","default","css","createGlobalStyle","ThemeProvider","keyframes","breakpoints","sm","md","lg","darkTheme","primary","danger","main_100","main_200","main_300","main_400","text","lightTheme","StoreThemeProvider","connect","pure","props","react","children","mediaMixin","contents","EditorMain","main","_templateObject","EditorArea","section","EditorArea_templateObject","EditorBar","aside","EditorBar_templateObject","SettingsWrapper","div","layout_templateObject","modularSize","size","modularScale","typography","typography_templateObject","FormRow","FormRow_templateObject","FButton","button","FormButton_templateObject","level","darken","FormButton","onClick","disabled","title","style","SHeader","header","header_layout_templateObject","SHeaderContentDivider","_templateObject2","SHeaderIconButton","_templateObject3","AppModalWrapper","AppModal_templateObject","AppModalOverlay","AppModal_templateObject2","rgba","AppModalHeader","AppModal_templateObject3","AppModalContent","_templateObject4","AppModal","containerId","heading","onClose","container","document","getElementById","createPortal","justifySelf","react_fontawesome_index_es","icon","presetList","idList","fromGradients","find","colorsFromGradient","colorsAmountInGradient","isUsingChroma","typeofGradient","hasFocalPoints","AppInputWrapper","AppInput_templateObject","WrapperInput","input","AppInput_templateObject2","WrapperMessage","span","AppInput_templateObject3","AppInput","placeholder","onChange","onKeyDown","errorMessage","PresetForm","dispatch","bindActionCreators","onCancel","_React$useState","React","_React$useState2","slicedToArray","presetName","setPresetName","_React$useState3","_React$useState4","setError","onSave","preset","name","setItem","nanoid","stringify","AppInput_AppInput","event","newName","target","key","justifyContent","FormButton_FormButton","marginRight","getState","gradientsFromPreset","FormLabel","label","FormLabel_templateObject","FSelect","select","FormSelect_templateObject","FormSelect","options","defaultValue","opt","PresetSelector","appSelectors","selected","FormSelect_FormSelect","mapPresets","SettingsHeaderComponent","createGradient","_this","throttled","throttle","preventDefault","_this$props","this","gradientsAmount","presetRootId","marginLeft","AppModal_AppModal","SettingsHeader","editorActions","SContent","content_layout_templateObject","ContentList","ul","layout_templateObject2","Item","li","list_item_layout_templateObject","ItemHeader","list_item_layout_templateObject2","ItemContent","layout_templateObject3","hidden","HeaderLink","layout_templateObject4","a","_templateObject5","FFieldset","fieldset","FormFieldset_templateObject","FLegend","legend","FormFieldset_templateObject2","FormFieldset","CList","list_layout_templateObject","CListItem","list_layout_templateObject2","CSample","color_layout_templateObject","background","CWrapper","color_layout_templateObject2","CName","color_layout_templateObject3","CManager","color_layout_templateObject4","CLink","layout_templateObject5","CPickerWrapper","_templateObject6","decideAboutChroma","selectors","actions","cx","cy","r","fx","fy","Color","ownProps","thunks","picker","togglePicker","pickerParent","addEventListener","clickHandler","current","contains","removeEventListener","ref","lib","g","b","onChangeComplete","newColor","rgb","ColorListComponent","renderColors","colorIdsList","nextProps","nextState","ColorList","FormSwitch","checked","react_switch_default","width","height","checkedIcon","uncheckedIcon","onColor","offColor","ColorsHeaderComponent","colorsAmount","FormSwitch_FormSwitch","ColorsHeader","Colors","FormFieldset_FormFieldset","GradientType","gradientType","FocalPoints","Properties","thumbStyles","trackStyles","FRangeInput","FormRange_templateObject","FRangeValue","FormRange_templateObject2","FormRange","min","max","step","inputWidth","labelWidth","Attributes","FormRange_FormRange","parseFloat","spreadMethod","Chroma","chromaAttributes","interpolations","modes","_props$chromaAttribut","parseInt","ListItem","collapsed","toggleCollapsed","index","SettingsContentComponent","renderList","SettingsContent","Settings","SVGGradient","renderStops","stopColor","assign","gradientUnits","_ref","_spreadMethod","DefsRenderer","DefsRenderer_SVGGradient","FiguresRenderer","x","y","fill","SIWrapper","SaveIcon_templateObject","SaveIcon","download","ArtboardSVG","svg","Artboard_templateObject","Artboard","SaveIcon_SaveIcon","content","outerHTML","file","Blob","saveAs","Editor","Artboard_Artboard","Settings_Settings","GlobalStyles","GlobalStyles_templateObject","SwitchWrapper","ThemeSwitch_templateObject","SwitchLabel","ThemeSwitch_templateObject2","SwitchComp","changeHandler","htmlFor","className","ThemeSwitch","library","add","faChevronLeft","faList","faPaintRoller","faCaretDown","faCaretUp","faPlus","faSearch","faTrash","faEdit","faCode","faSave","faTimes","ReactDOM","render","react_default","createElement","es","Editor_Editor","head","getElementsByTagName","innerHTML","appendChild"],"mappings":"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","file":"static/js/main.5c12f231.chunk.js","sourcesContent":["import { createAction } from 'typesafe-actions';\n\nexport const setTheme = createAction('@application/SET_THEME', (resolve) => {\n  return (theme: 'dark' | 'light') => resolve(theme);\n});\n\nexport const selectPreset = createAction(\n  '@application/SELECT_PRESET', (resolve) =>\n    (selectedPreset: string) => resolve(selectedPreset)\n);\n\nexport const openModal = createAction(\n  '@application/OPEN_MODAL', (resolve) =>\n    () => resolve()\n);\n\nexport const closeModal = createAction(\n  '@application/CLOSE_MODAL', (resolve) =>\n    () => resolve()\n);\n","import { ActionType, getType } from 'typesafe-actions';\nimport * as appActions from './actions';\nimport { Preset } from '../_types';\nimport { loadPresets } from '../../utils/presets';\n\nexport type ApplicationReducer = {\n  theme: 'dark' | 'light',\n  presets: Preset[],\n  selectedPreset: string | undefined,\n  modal: boolean,\n};\n\nexport type ApplicationAction = ActionType<typeof appActions>;\n\nexport const initialState: ApplicationReducer = {\n  theme: 'dark',\n  presets: loadPresets(),\n  selectedPreset: undefined,\n  modal: false,\n};\n\nexport const application =\n  (\n    state: ApplicationReducer = initialState,\n    action: ApplicationAction\n  ): ApplicationReducer => {\n    switch (action.type) {\n      case getType(appActions.setTheme):\n        return {\n          ...state,\n          theme: action.payload as ('dark' | 'light'),\n        };\n      case getType(appActions.selectPreset):\n        return {\n          ...state,\n          selectedPreset: action.payload,\n        };\n      case getType(appActions.openModal):\n        return {\n          ...state,\n          modal: true,\n        };\n      case getType(appActions.closeModal):\n        return {\n          ...state,\n          modal: false,\n        };\n      default:\n        return state;\n    }\n  }\n","import nanoid from 'nanoid';\nimport { Preset } from '../store/_types';\n\nexport const loadPresets = (): Preset[] => {\n  const itemsInStorage: string[] = Object.values(localStorage);\n  if (itemsInStorage.length > 0) {\n    return itemsInStorage\n      .map((item: string): Preset => JSON.parse(item));\n  }\n  return [];\n};\n\nexport const savePreset = (preset: Preset) =>\n  localStorage.setItem(nanoid(), JSON.stringify(preset));\n","import { createAction } from 'typesafe-actions';\nimport * as payloads from './_payloads';\nimport { Gradient } from '../_types';\n\nexport const loadGradients = createAction(\n  '@editor/LOAD_GRADIENTS', (resolve) =>\n    (gradients: Gradient[]) => resolve(gradients)\n);\n\nexport const addGradient = createAction(\n  '@editor/ADD_GRADIENT', (resolve) =>\n    (id: string) => resolve(id)\n  );\n\nexport const deleteGradient = createAction(\n  '@editor/DELETE_GRADIENT', (resolve) =>\n    (id: string) => resolve(id)\n);\n\nexport const addColor = createAction(\n  '@editor/ADD_COLOR', (resolve) =>\n    (payload: payloads.ColorPayload) => resolve(payload)\n);\n\nexport const deleteColor = createAction(\n  '@editor/DELETE_COLOR', (resolve) =>\n    (payload: payloads.ColorPayload) => resolve(payload)\n);\n\nexport const editColor = createAction(\n  '@editor/EDIT_COLOR', (resolve) =>\n    (payload: payloads.ColorEditionPayload) => resolve(payload)\n);\n\nexport const deleteAllColors = createAction(\n  '@editor/DELETE_ALL_COLORS', (resolve) =>\n    (id: string) => resolve(id),\n);\n\nexport const toggleChroma = createAction(\n  '@editor/TOGGLE_CHROMA', (resolve) =>\n    (id: string) => resolve(id)\n);\n\nexport const setGradientType = createAction(\n  '@editor/SET_GRADIENT_TYPE', (resolve) =>\n    (payload: payloads.GradientTypePayload) => resolve(payload),\n);\n\nexport const setAttribute = createAction(\n  '@editor/SET_ATTRIBUTE', (resolve) =>\n    (payload: payloads.AttributeEditionPayload) => resolve(payload)\n);\n\nexport const toggleFocalPoints = createAction(\n  '@editor/TOGGLE_FOCAL_POINTS', (resolve) =>\n    (id: string) => resolve(id)\n);\n\nexport const replaceGradientAttributes = createAction(\n  '@editor/REPLACE_GRADIENT_ATTRIBUTES', (resolve) =>\n    (payload: payloads.AttributesReplacementPayload) => resolve(payload)\n);\n\nexport const setChromaAttribute = createAction(\n  '@editor/SET_CHROMA_ATTRIBUTE', (resolve) =>\n    (payload: payloads.ChromaEditionPayload) => resolve(payload)\n);\n\nexport const computeChromaColors = createAction(\n  '@editor/COMPUTE_CHROMA_COLORS',\n  (resolve) => (gradientId: string) => resolve(gradientId),\n);\n\nexport const deleteAllGradients = createAction(\n  '@editor/DELETE_ALL_GRADIENTS', (resolve) =>\n    () => resolve(), \n);\n","import chroma from 'chroma-js';\nimport {\n  Gradient,\n  OutputColor,\n  InputColor,\n  ChromaAttributes\n} from '../store/_types';\n\nconst createLinearScale = (attrs: ChromaAttributes, colors: string[]) => {\n  if (attrs.lightnessCorrection) {\n    return chroma\n      .scale(colors)\n      .mode(attrs.mode)\n      .correctLightness();\n  } else {\n    return chroma\n      .scale(colors)\n      .mode(attrs.mode);\n  }\n};\n\nconst createBezierScale = (attrs: ChromaAttributes, colors: string[]) => {\n  if (attrs.lightnessCorrection) {\n    return chroma\n      .bezier(colors)\n      .scale()\n      .correctLightness();\n  } else {\n    return chroma.bezier(colors);\n  }\n};\n\nconst createBase = (samples: number, scale: any): chroma.Color[] => {\n  const base: chroma.Color[] = [];\n  for (let i = 0; i < samples; i++) {\n    base.push(scale(i / samples));\n  }\n  return base;\n};\n\nconst normalize = (base: any) => {\n  return base.map((color: any) => color._rgb)\n    .map((val: any) => val.filter(\n      (el: any) => typeof el !== 'boolean'\n    ))\n  }\n\nexport const gradient = (grad: Gradient): OutputColor[] => {\n  const _colors: string[] = grad.colors\n    .map((color: InputColor): string => {\n      const c = color.color;\n      return `rgba(${c[0]}, ${c[1]}, ${c[2]}, ${c[3]})`;\n    });\n  const scaleCreator = grad.chroma.interpolation === 'linear' ?\n    createLinearScale : createBezierScale;\n  const scale = scaleCreator(grad.chroma, _colors);\n  const base: chroma.Color[] = createBase(grad.chroma.samples, scale);\n  const rawResult = normalize(base);\n  const toReturn: OutputColor[] = rawResult.map((color: any): OutputColor => ({\n    color,\n    offset: (rawResult.indexOf(color) / rawResult.length) * 100,\n  }));\n  return toReturn;\n};\n","import { Gradient, InputColor } from \"../_types\";\nimport { EditorReducer } from \"./reducer\";\n\nexport const createGradient = (id: string): Gradient => ({\n  id,\n  type: 'linear',\n  focalPoints: false,\n  useChroma: false,\n  attributes: {\n    x1: 0,\n    y1: 0,\n    x2: 1,\n    y2: 0,\n  },\n  chroma: {\n    interpolation: 'linear',\n    mode: 'rgb',\n    lightnessCorrection: false,\n    samples: 10,\n  },\n  colors: [],\n  output: [],\n});\n\nexport const createColor = (id: string): InputColor => ({\n  id,\n  color: [\n    Math.floor(Math.random() * 255),\n    Math.floor(Math.random() * 255),\n    Math.floor(Math.random() * 255),\n    0.5,\n  ],\n});\n\nexport const getGradientIndex = (state: EditorReducer, id: string): number =>\n  state.gradients.findIndex((gradient: Gradient) => gradient.id === id);\n\nexport const getColorIndex = (state: EditorReducer, gradientIndex: number, colorId: string): number => {\n  return state.gradients[gradientIndex].colors\n    .findIndex((color: InputColor) => color.id === colorId);\n}\n\nexport const defaultLinearAttributes = () => ({\n  x1: 0,\n  y1: 0,\n  x2: 1,\n  y2: 0,\n});\n\nexport const defaultRadialAttributes = () => ({\n  cx: 0.5,\n  cy: 0.5,\n  r: 1,\n  fx: 0,\n  fy: 0\n});","import update from 'immutability-helper';\nimport { EditorReducer } from './reducer';\nimport { gradient } from '../../utils/gradient';\nimport * as helpers from './helpers';\nimport * as payloads from './_payloads';\nimport { Gradient } from '../_types';\n\nexport const loadGradients = (state: EditorReducer, payload: Gradient[]): EditorReducer =>\n  update(\n    state,\n    {\n      gradients: {\n        $set: payload,\n      },\n    },\n  );\n\nexport const addGradient = (state: EditorReducer, payload: string): EditorReducer =>\n  update(\n    state,\n    {\n      gradients: {\n        $push: [helpers.createGradient(payload)],\n      },\n    },\n  );\n\nexport const deleteGradient = (state: EditorReducer, payload: string): EditorReducer =>\n  update(\n    state,\n    {\n      gradients: {\n        $splice: [\n          [ helpers.getGradientIndex(state, payload), 1 ]\n        ],\n      },\n    },\n  );\n\nexport const addColor = (state: EditorReducer, payload: payloads.ColorPayload): EditorReducer => {\n  const targetIndex: number =  helpers.getGradientIndex(state, payload.gradientId);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          colors: {\n            $push: [ helpers.createColor(payload.colorId) ],\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const deleteColor = (state: EditorReducer, payload: payloads.ColorPayload): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload.gradientId);\n  const colorIndex: number = helpers.getColorIndex(state, targetIndex, payload.colorId);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          colors: {\n            $splice: [\n              [colorIndex, 1],\n            ],\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const editColor = (state: EditorReducer, payload: payloads.ColorEditionPayload): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload.gradientId);\n  const colorIndex: number = helpers.getColorIndex(state, targetIndex, payload.colorId);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          colors: {\n            [colorIndex]: {\n              color: {\n                $set: payload.color,\n              },\n            },\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const deleteAllColors = (state: EditorReducer, payload: string): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          colors: {\n            $set: [],\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const toggleChroma = (state: EditorReducer, payload: string): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          $toggle: [ 'useChroma' ],\n        }\n      },\n    },\n  );\n};\n\nexport const setGradientType = (state: EditorReducer, payload: payloads.GradientTypePayload): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload.id);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          type: {\n            $set: payload.type,\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const setAttribute = (state: EditorReducer, payload: payloads.AttributeEditionPayload): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload.id);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          attributes: {\n            [payload.attribute]: {\n              $set: payload.value,\n            },\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const toggleFocalPoints = (state: EditorReducer, payload: string): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          focalPoints: {\n            $set: !state.gradients[targetIndex].focalPoints,\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const replaceGradientAttributes = (\n  state: EditorReducer,\n  payload: payloads.AttributesReplacementPayload\n): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload.id);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          attributes: {\n            $set: payload.attributes,\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const setChromaAttribute = (state: EditorReducer, payload: payloads.ChromaEditionPayload): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload.id);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          chroma: {\n            [payload.attribute]: {\n              $set: payload.value,\n            },\n          },\n        },\n      },\n    },\n  );\n};\n\nexport const computeChromaColors = (state: EditorReducer, payload: string): EditorReducer => {\n  const targetIndex: number = helpers.getGradientIndex(state, payload);\n  return update(\n    state,\n    {\n      gradients: {\n        [targetIndex]: {\n          output: {\n            $set: gradient(state.gradients[targetIndex]),\n          }\n        }\n      }\n    }\n  );\n};\n\nexport const deleteAllGradients = (state: EditorReducer): EditorReducer =>\n  update(\n    state,\n    {\n      gradients: {\n        $set: [],\n      },\n    },\n  );\n","import { Gradient } from '../_types';\nimport { getType, ActionType } from 'typesafe-actions';\nimport * as EditorActions from './actions';\nimport * as mutations from './mutations';\n\nexport type EditorReducer = {\n  gradients: Gradient[],\n  error: string | null,\n};\n\nexport type EditorAction = ActionType<typeof EditorActions>;\n\nconst initialState: EditorReducer = {\n  gradients: [],\n  error: null,\n};\n\nexport const editor = (\n  state: EditorReducer = initialState,\n  action: EditorAction\n): EditorReducer => {\n  switch (action.type) {\n    case getType(EditorActions.addGradient):\n      return mutations.addGradient(state, action.payload);\n    case getType(EditorActions.deleteGradient):\n      return mutations.deleteGradient(state, action.payload);\n    case getType(EditorActions.addColor):\n      return mutations.addColor(state, action.payload);\n    case getType(EditorActions.deleteColor):\n      return mutations.deleteColor(state, action.payload);\n    case getType(EditorActions.editColor):\n      return mutations.editColor(state, action.payload);\n    case getType(EditorActions.deleteAllColors):\n      return mutations.deleteAllColors(state, action.payload);\n    case getType(EditorActions.toggleChroma):\n      return mutations.toggleChroma(state, action.payload);\n    case getType(EditorActions.setGradientType):\n      return mutations.setGradientType(state, action.payload);\n    case getType(EditorActions.setAttribute):\n      return mutations.setAttribute(state, action.payload);\n    case getType(EditorActions.toggleFocalPoints):\n      return mutations.toggleFocalPoints(state, action.payload);\n    case getType(EditorActions.replaceGradientAttributes):\n      return mutations.replaceGradientAttributes(state, action.payload);\n    case getType(EditorActions.setChromaAttribute):\n      return mutations.setChromaAttribute(state, action.payload);\n    case getType(EditorActions.computeChromaColors):\n      return mutations.computeChromaColors(state, action.payload);\n    case getType(EditorActions.deleteAllGradients):\n      return mutations.deleteAllGradients(state);\n    case getType(EditorActions.loadGradients):\n      return mutations.loadGradients(state, action.payload);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { application } from './application/reducer';\nimport { editor } from './editor/reducer';\n\nexport const rootReducer = combineReducers({\n  application,\n  editor,\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nconst initialState = {};\n\nconst middlewares = [\n  applyMiddleware(thunk),\n];\n\nlet composed = middlewares;\n\nif (process.env.NODE_ENV === 'development') {\n  composed = [composeWithDevTools(...middlewares)]\n} else {\n  composed = [compose(...middlewares)];\n}\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  ...composed,\n);\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { AppTheme } from './themes';\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n} = styledComponents as ThemedStyledComponentsModule<AppTheme>;\n\nexport {\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n};\nexport default styled;\n","export type AppThemeColors = {\n  primary: string;\n  danger: string;\n  main_100: string;\n  main_200: string;\n  main_300: string;\n  main_400: string;\n  text: string;\n};\n\nexport type AppThemeBreakpoints = {\n  sm: number,\n  md: number,\n  lg: number,\n};\n\nexport type AppTheme = {\n  colors: AppThemeColors,\n  breakpoints: AppThemeBreakpoints,\n};\n\nconst breakpoints: AppThemeBreakpoints = {\n  sm: 768,\n  md: 1440,\n  lg: 1800,\n};\n\nexport const darkTheme: AppTheme = {\n  colors: {\n    primary: '#5383D6',\n    danger: '#CC0E3A',\n    main_100: '#11151c',\n    main_200: '#212C3F',\n    main_300: '#364256',\n    main_400: '#4D5E7C',\n    text: '#FCFCFC',\n  },\n  breakpoints,\n};\n\nexport const lightTheme: AppTheme = {\n  colors: {\n    primary: '#18e09d',\n    danger: '#CC0E3A',\n    main_100: '#898993',\n    main_200: '#B6B6C1',\n    main_300: '#CECEE0',\n    main_400: '#DEDEEF',\n    text: '#212121',\n  },\n  breakpoints,\n};\n","import * as React from 'react';\nimport { ThemeProvider } from '../../styles/styledComponents';\nimport { connect } from 'react-redux';\nimport { darkTheme, lightTheme } from '../../styles/themes';\n\ntype StoreThemeProviderProps = {\n  theme: 'dark' | 'light';\n  children: any;\n};\n\nconst $StoreThemeProvider = (\n  props: StoreThemeProviderProps\n): React.ReactNode => (\n  <ThemeProvider theme={props.theme === 'light' ? lightTheme : darkTheme}>\n    {props.children}\n  </ThemeProvider>\n);\n\nconst mapStateToProps = (state: any) => ({\n  theme: state.application.theme,\n});\n\nexport const StoreThemeProvider = connect(\n  mapStateToProps,\n  null,\n  null,\n  { pure: false },\n)($StoreThemeProvider as React.ComponentType);\n","import { AppTheme } from './themes';\n\nexport const mediaMixin = (theme: AppTheme, contents: { sm: string, md: string }): string => `\n  @media screen and (max-width: ${theme.breakpoints.sm}px) {\n    ${contents.sm}\n  }\n  @media screen and (min-width: ${theme.breakpoints.sm + 1}px) {\n    ${contents.md}\n  }\n`;\n","import styled from '../../../../styles/styledComponents';\nimport { mediaMixin } from '../../../../styles/mixins';\n\nexport const EditorMain = styled.main`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  ${props => mediaMixin(props.theme, {\n    sm: 'flex-direction: column;',\n    md: 'flex-direction: row;'\n  })}\n`;\n","import styled from '../../../../styles/styledComponents';\nimport { mediaMixin } from '../../../../styles/mixins';\n\nexport const EditorArea = styled.section`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  ${props => mediaMixin(props.theme, {\n    sm: 'width: 100%;', md: 'width: calc(100% - 400px);'\n  })}\n`;","import styled from '../../../../styles/styledComponents';\nimport { mediaMixin } from '../../../../styles/mixins';\n\nexport const EditorBar = styled.aside`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  background-color: ${props => props.theme.colors.main_300};\n  overflow-y: auto;\n  ${props => mediaMixin(props.theme, {\n    sm: `\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      z-index: 2;\n      width: 100%;\n      height: 280px;\n    `,\n    md: `\n      position: absolute;\n      z-index: 2;\n      right: 0;\n      top: 0;\n      height: 100vh;\n      min-width: 400px;\n      max-width: 400px;\n    `\n  })}\n`;\n","import styled from '../../../styles/styledComponents';\n\nexport const SettingsWrapper = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  h6 {\n    margin: 0 0 .2em 0;\n  }\n`;\n","import { css } from './styledComponents';\nimport { modularScale } from 'polished';\n\nexport const modularSize = (size: number): string => modularScale(size, 1, 'minorThird');\n\nexport const typography = css`\n\n  h1, h2, h3, h4, h5, h6, code,\n  label, span, a, dd, dt, dl, pre, legend, select, option, input,\n  button, p, legend {\n    color: ${props => props.theme.colors.text};\n  }\n\n  h1, h2, h3, h4, h5, h6, code, legend, p, input, select, option, button,\n  label, span, dd, dt, a {\n    font-family: 'Fira Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  }\n\n  h1 {\n    font-size: ${modularSize(5)};\n  }\n\n  h2 {\n    font-size: ${modularSize(4)}\n  }\n\n  h3 {\n    font-size: ${modularSize(3)}\n  }\n\n  h4 {\n    font-size: ${modularSize(2)};\n  }\n\n  h5 {\n    font-size: ${modularSize(1)};\n  }\n\n  h6 {\n    font-size: ${modularSize(0)};\n  }\n\n  p, label, span, dl, dd, dt, a {\n    font-size: ${modularSize(0)};\n    letter-spacing: .035em;\n  }\n\n  legend {\n    font-size: ${modularSize(0)};\n  }\n\n  input, select, option {\n    font-size: ${modularSize(-1)};\n  }\n\n`;\n","import styled from '../../styles/styledComponents';\nimport { modularSize } from '../../styles/typography';\n\nexport const FormRow = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: auto;\n  display: flex;\n  align-items: center;\n  padding: .5em;\n  h5 {\n    font-size: ${modularSize(-1.2)};\n    margin: 0;\n  }\n`;\n","import * as React from 'react';\nimport { darken } from 'polished';\nimport styled from '../../styles/styledComponents';\n\ntype FButtonProps = {\n  level?: 'primary' | 'danger',\n};\n\nconst FButton = styled.button<FButtonProps>`\n  padding: .5em .5em;\n  border: none;\n  border-radius: 4px;\n  background-color: ${props => props.level === 'danger' ? props.theme.colors.danger : props.theme.colors.primary};\n  color: ${props => props.level === 'danger' ? '#fcfcfc' : props.theme.colors.text};\n  transition: 120ms all ease-in-out;\n  border: 1px solid ${props => props.theme.colors.main_300};\n  outline: none;\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => darken(0.05, props.level === 'danger' ? props.theme.colors.danger : props.theme.colors.primary)};\n  }\n  &:focus {\n    outline: 1px solid ${props => props.theme.colors.main_100};\n  }\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nexport type FormButtonProps = {\n  onClick: (event?: React.MouseEvent) => void,\n  children?: React.ReactNode,\n  disabled?: boolean,\n  title?: string,\n  style?: any,\n  level?: 'primary' | 'danger',\n};\n\nexport const FormButton = (props: FormButtonProps) => {\n  const {\n    onClick,\n    disabled,\n    title,\n    children,\n    style,\n  } = props;\n  return (\n    <FButton\n      level={props.level}\n      onClick={onClick}\n      disabled={disabled}\n      title={title}\n      style={style}\n    >\n      {children}\n    </FButton>\n  );\n};\n","import styled from '../../../../styles/styledComponents';\nimport { darken } from 'polished';\n\nexport const SHeader = styled.header`\n  box-sizing: border-box;\n  background-color: ${props => props.theme.colors.main_200};\n  padding: .5em;\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  flex-direction: column;\n`;\n\nexport const SHeaderContentDivider = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const SHeaderIconButton = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n  text-decoration: none;\n  color: ${props => props.theme.colors.text};\n  transition: 120ms all ease-in-out;\n  &:hover {\n    cursor: pointer;\n    color: ${props => darken(0.25, props.theme.colors.text)};\n  }\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;","import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { rgba } from 'polished';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { SHeaderIconButton } from '../editor/settings/header/layout';\nimport styled from '../../styles/styledComponents';\nimport { mediaMixin } from '../../styles/mixins';\n\nconst AppModalWrapper = styled.div`\n  box-sizing: border-box;\n  position: fixed;\n  top: 15%;\n  z-index: 999;\n  background-color: ${props => props.theme.colors.main_200};\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  padding: .5em;\n  ${props => mediaMixin(props.theme, {\n    sm: `\n      width: 80%;\n      left: 10%;\n    `,\n    md: `\n      width: 500px;\n      left: calc(50% - 250px);\n    `,\n  })}\n`;\n\nconst AppModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  z-index: 998;\n  background-color: ${props => rgba(props.theme.colors.main_200, 0.85)};\n`;\n\nconst AppModalHeader = styled.header`\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  justify-content: space-between;\n  h4 {\n    margin: 0;\n  }\n`;\n\nconst AppModalContent = styled.main`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 1em;\n`;\n\nexport type AppModalProps = {\n  containerId: string,\n  children: any,\n  heading: string,\n  onClose: () => void,\n};\n\nexport const AppModal = (props: AppModalProps): React.ReactPortal => {\n  const {\n    containerId,\n    children,\n    heading,\n    onClose,\n  } = props;\n  const container = document.getElementById(containerId);\n  return createPortal(\n    <React.Fragment>\n      <AppModalOverlay onClick={onClose} />\n      <AppModalWrapper>\n        <AppModalHeader>\n          <h4>{heading}</h4>\n          <SHeaderIconButton\n            title=\"Close\"\n            onClick={onClose}\n            style={{\n              justifySelf: 'flex-end',\n            }}\n          >\n            <FontAwesomeIcon\n              icon=\"times\"\n              size=\"2x\"\n            />\n          </SHeaderIconButton>\n        </AppModalHeader>\n        <AppModalContent>\n          {children}\n        </AppModalContent>\n      </AppModalWrapper>\n    </React.Fragment>,\n    container as HTMLElement,\n  );\n};\n","import { Preset } from \"../_types\";\n\nexport const modal = (state: any): boolean =>\n  state.application.modal;\n\nexport const presetList = (state: any): Preset[] =>\n  state.application.presets;\n\nexport const selectedPreset = (state: any): string =>\n  state.application.selectedPreset;","import { Gradient, InputColor, LinearGradientAttributes, RadialGradientAttributes, ChromaAttributes } from '../_types';\n\nexport const gradients = (state: any): Gradient[] =>\n  state.editor.gradients;\n\nexport const gradientsAmount = (state: any): number =>\n  gradients(state).length;\n\nexport const idList = (state: any): string[] =>\n  state.editor.gradients.map((gradient: Gradient): string => gradient.id);\n\nexport const fromGradients = (state: any, id: string): Gradient =>\n  state.editor.gradients.find((gradient: Gradient) => gradient.id === id);\n\nexport const colorsFromGradient = (state: any, id: string): InputColor[] =>\n  fromGradients(state, id).colors;\n\nexport const colorIdsFromGradient = (state: any, id: string): string[] =>\n  colorsFromGradient(state, id)\n    .map((color: InputColor): string => color.id); \n\nexport const colorsAmountInGradient = (state: any, id: string): number =>\n  colorsFromGradient(state, id).length;\n\nexport const isUsingChroma = (state: any, id: string): boolean =>\n  fromGradients(state, id).useChroma;\n\nexport const colorById = (state: any, gradientId: string) =>\n  (colorId: string): InputColor => <InputColor>colorsFromGradient(state, gradientId)\n    .find((color: InputColor) => color.id === colorId);\n\nexport const typeofGradient = (state: any, gradientId: string): 'linear' | 'radial' =>\n  fromGradients(state, gradientId).type;\n\nexport const attributeFromGradient = (state: any, id: string) =>\n  (attribute: string): number =>\n    // @ts-ignore\n    fromGradients(state, id).attributes[attribute];\n\nexport const hasFocalPoints = (state: any, id: string): boolean =>\n  fromGradients(state, id).focalPoints;\n\nexport const attributesOf = (state: any, id: string): LinearGradientAttributes | RadialGradientAttributes =>\n  fromGradients(state, id).attributes;\n\nexport const chromaAttributesOf = (state: any, id: string): ChromaAttributes =>\n  fromGradients(state, id).chroma;","import * as React from 'react';\nimport styled from '../../styles/styledComponents';\nimport { placeholder } from 'polished';\n\nconst AppInputWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst WrapperInput = styled.input<{ error: boolean }>`\n  box-sizing: border-box;\n  padding: .5em;\n  width: 100%;\n  height: 35px;\n  box-sizing: border-box;\n  border-radius: 4px;\n  border: 1px solid ${props => props.theme.colors.main_400};\n  outline: none;\n  background-color: ${props => props.theme.colors.main_300};\n  color: ${props => props.theme.colors.text};\n  border-bottom: ${props => props.error ? `2px solid ${props.theme.colors.danger}px` : null};\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst WrapperMessage = styled.span`\n  width: 100%;\n  height: 12px;\n  font-size: 10px;\n  font-weight: bold;\n  box-sizing: border-box;\n  padding-top: 5px;\n  color: ${props => props.theme.colors.danger};\n`;\n\ntype AppInputProps = {\n  placeholder: string,\n  errorMessage: string,\n  error: boolean,\n  value?: string,\n  onChange?: (event: React.ChangeEvent) => void,\n  onKeyDown?: (event: React.KeyboardEvent) => void, \n};\n\nexport const AppInput = (props: AppInputProps) => {\n  const {\n    placeholder,\n    value,\n    onChange,\n    onKeyDown,\n    error,\n    errorMessage,\n  } = props;\n  return (\n    <AppInputWrapper>\n      <WrapperInput\n        error={error}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n      />\n      <WrapperMessage>\n        {error ? errorMessage : null}\n      </WrapperMessage>\n    </AppInputWrapper>\n  );\n};\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { presetList } from '../../store/application/selectors';\nimport { gradients } from '../../store/editor/selectors';\nimport * as appActions from '../../store/application/actions';\nimport { FormRow } from '../form/FormRow';\nimport { FormButton } from '../form/FormButton';\nimport { AppInput } from '../common/AppInput';\nimport { savePreset } from '../../utils/presets';\nimport { Preset, Gradient } from '../../store/_types';\n\ntype PresetFormComponentProps = {\n  presets: Preset[],\n  gradients: Gradient[],\n  onCancel: () => void,\n};\n\nexport const PresetFormComponent = (props: PresetFormComponentProps) => {\n  const { presets, gradients, onCancel } = props;\n  const [ presetName, setPresetName ] = React.useState('');\n  const [ error, setError ] = React.useState(false);\n  \n  const isDuplicatedName = (name: string): boolean =>\n    presets.findIndex((preset: Preset) => preset.name === name) > -1;\n\n  const typeHandler = (event: React.ChangeEvent) => {\n    const newName: string = (event.target as HTMLInputElement).value;\n    setPresetName(newName);\n    if (isDuplicatedName(newName)) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n  };\n\n  const keydownHandler = (event: React.KeyboardEvent) => {\n    if (\n      presetName.length > 0 &&\n      !error &&\n      event.key === 'Enter'\n    ) {\n      onSave();\n    }\n  };\n\n  const onSave = () => {\n    savePreset({\n      name: presetName,\n      value: gradients,\n    });\n    onCancel();\n  };\n\n  return (\n    <React.Fragment>\n      <FormRow>\n        <AppInput\n          placeholder=\"Preset name\"\n          error={error}\n          errorMessage=\"Preset name must be unique\"\n          onChange={typeHandler}\n          onKeyDown={keydownHandler}\n          value={presetName}\n        />\n      </FormRow>\n      <FormRow\n        style={{\n          justifyContent: 'flex-end',\n        }}\n      >\n        <FormButton\n          level=\"danger\"\n          onClick={onCancel}\n          style={{\n            marginRight: '.5em',\n          }}\n        >\n          Cancel\n        </FormButton>\n        <FormButton\n          onClick={onSave}\n          disabled={presetName.length === 0 || error}\n        >\n          Save\n        </FormButton>\n      </FormRow>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  presets: presetList(state),\n  gradients: gradients(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  onCancel: appActions.closeModal,\n}, dispatch);\n\nexport const PresetForm = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PresetFormComponent);\n","import { Dispatch } from \"redux\";\nimport { ApplicationAction, ApplicationReducer } from \"./reducer\";\nimport * as appActions from './actions';\nimport { loadGradients } from '../editor/actions';\nimport { Preset } from \"../_types\";\nimport { EditorAction } from \"../editor/reducer\";\n\nexport const selectPreset = (payload: string) =>\n  (\n    dispatch: Dispatch<ApplicationAction | EditorAction>,\n    getState: () => any,\n  ) => {\n    dispatch(appActions.selectPreset(payload));\n    const list: Preset[] = getState().application.presets;\n    const gradientsFromPreset = list\n      .find((preset: Preset) => preset.name === payload);\n    dispatch(loadGradients((gradientsFromPreset as Preset).value));\n  };","import styled from '../../styles/styledComponents';\nimport { modularSize } from '../../styles/typography';\n\nexport const FormLabel = styled.label`\n  font-size: ${modularSize(-1.65)};\n  padding-right: .5em;\n  min-width: 30px;\n`;\n","import * as React from 'react';\nimport styled from '../../styles/styledComponents';\nimport { FormLabel } from './FormLabel';\n\nexport const FSelect = styled.select`\n  color: ${props => props.theme.colors.text};\n  background-color: ${props => props.theme.colors.main_400};\n  &:hover {\n    cursor: pointer;\n  }\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nexport type FormSelectOption = {\n  text: string,\n  value: string,\n};\n\nexport type FormSelectProps = {\n  label: string,\n  options: string[],\n  value?: string,\n  onChange?: any,\n  placeholder?: string,\n  disabled?: boolean\n};\n\nexport const FormSelect = (props: FormSelectProps) => {\n  \n  const {\n    disabled,\n    label,\n    options,\n    value,\n    onChange,\n    placeholder,\n  } = props;\n\n  const renderOpts = () => options.map((opt: string): JSX.Element => (\n    <option\n      key={opt}\n      value={opt}\n    >\n      {opt}\n    </option>\n  ));\n\n  return (\n    <React.Fragment>\n      <FormLabel>\n        {label}:\n      </FormLabel>\n      <FSelect\n        value={value}\n        onChange={onChange}\n        defaultValue={placeholder ? 'default' : undefined}\n        disabled={disabled}\n      >\n        {\n          placeholder\n            ? <option\n              value=\"default\"\n              disabled\n            >\n              {placeholder}\n            </option>\n            : null\n        }\n        {renderOpts()}\n      </FSelect>\n    </React.Fragment>\n  );\n};","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport * as appSelectors from '../../../../../store/application/selectors';\nimport { Preset } from '../../../../../store/_types';\nimport { selectPreset } from '../../../../../store/application/thunks';\nimport { FormSelect } from '../../../../form/FormSelect';\n\nexport type PresetSelectorComponentProps = {\n  presets: Preset[],\n  selected: string,\n  selectPreset: (preset: string) => void,\n};\n\nconst PresetSelectorComponent = (props: PresetSelectorComponentProps) => {\n  const { presets, selectPreset, selected } = props;\n  const mapPresets = (presets: Preset[]): string[] => presets\n    .map((preset: Preset): string => preset.name);\n  return (\n    <FormSelect\n      label=\"Preset\"\n      options={mapPresets(presets)}\n      value={selected}\n      onChange={(event: React.ChangeEvent) => selectPreset(\n        (event.target as HTMLSelectElement).value)\n      }\n      placeholder=\"Select preset\"\n      disabled={presets.length === 0}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  presets: appSelectors.presetList(state),\n  selected: appSelectors.selectedPreset(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  selectPreset,\n}, dispatch);\n\nexport const PresetSelector = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PresetSelectorComponent as React.ComponentType);\n","import * as React from 'react';\nimport nanoid from 'nanoid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport throttle from 'lodash.throttle';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormRow } from '../../../form/FormRow';\nimport { FormButton } from '../../../form/FormButton';\nimport { AppModal } from '../../../common/AppModal';\nimport { SHeader, SHeaderContentDivider, SHeaderIconButton } from './layout';\nimport * as editorActions from '../../../../store/editor/actions';\nimport * as appActions from '../../../../store/application/actions';\nimport * as appSelectors from '../../../../store/application/selectors';\nimport { gradientsAmount } from '../../../../store/editor/selectors';\nimport { PresetForm } from '../../../presets/PresetForm';\nimport { PresetSelector } from './preset_selector/PresetSelector';\n\nexport type SettingsHeaderComponentProps = {\n  addGradient: (id: string) => void,\n  deleteAllGradients: () => void,\n  openModal: () => void,\n  closeModal: () => void,\n  modal: boolean,\n  gradientsAmount: number,\n  presetRootId: string,\n};\n\nclass SettingsHeaderComponent extends React.PureComponent<SettingsHeaderComponentProps> {\n\n  createGradient = (event?: React.MouseEvent) => {\n    const { addGradient } = this.props;\n    const throttled = throttle(\n      () => addGradient(nanoid()),\n      500,\n    );\n    (event as React.MouseEvent).preventDefault();\n    throttled();\n  };\n\n  deleteAllGradients = () => this.props.deleteAllGradients();\n\n  public render() {\n    const {\n      gradientsAmount,\n      openModal,\n      closeModal,\n      modal,\n      presetRootId,\n    } = this.props;\n    return (\n      <SHeader>\n        <FormRow style={{\n          justifyContent: 'space-between'\n        }}>\n          <SHeaderContentDivider>\n            <FormButton\n              onClick={this.createGradient}\n            >\n              Add Gradient\n            </FormButton>\n            <FormButton\n              style={{\n                marginLeft: '0.5em',\n              }}\n              level=\"danger\"\n              onClick={this.deleteAllGradients}\n              disabled={gradientsAmount === 0}\n            >\n              Delete All\n            </FormButton>\n          </SHeaderContentDivider>\n          <SHeaderContentDivider>\n            <SHeaderIconButton\n              title=\"Save as a preset\"\n              onClick={openModal}\n              disabled={gradientsAmount === 0}\n            >\n              <FontAwesomeIcon\n                icon=\"save\"\n                size=\"2x\"\n              />\n            </SHeaderIconButton>\n          </SHeaderContentDivider>\n          {\n            modal\n            ? <AppModal\n              heading=\"Save Preset\"\n              containerId={presetRootId}\n              onClose={closeModal}\n            >\n              <PresetForm />\n            </AppModal>\n            : null\n          }\n        </FormRow>\n        <FormRow>\n          <PresetSelector />\n        </FormRow>\n      </SHeader>\n    );\n  }\n};\n\nconst mapStateToProps = (state: any) => ({\n  gradientsAmount: gradientsAmount(state),\n  modal: appSelectors.modal(state),\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  addGradient: editorActions.addGradient,\n  deleteAllGradients: editorActions.deleteAllGradients,\n  openModal: appActions.openModal,\n  closeModal: appActions.closeModal,\n}, dispatch);\n\nexport const SettingsHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SettingsHeaderComponent);\n","import styled from '../../../../styles/styledComponents';\nimport { mediaMixin } from '../../../../styles/mixins';\n\nexport const SContent = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  overflow-y: auto;\n  box-shadow: inset 0 1px 2px 0 rgba(0, 0, 0, 0.23);\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  ${props => mediaMixin(props.theme, {\n  sm: `\n      height: calc(280px - 40px);\n    `,\n  md: `\n      height: 95vh;\n    `,\n})}\n`;\n\nexport const ContentList = styled.ul`\n  box-sizing: border-box;\n  list-style-type: none;\n  padding: .5em;\n  margin: 0;\n  width: 100%;\n  height: auto;\n`;","import styled from '../../../../../styles/styledComponents';\n\nexport const Item = styled.li`\n  box-sizing: border-box;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  margin: .5em 0;\n  width: 100%;\n  height: auto;\n`;\n\nexport const ItemHeader = styled.header`\n  background-color: ${props => props.theme.colors.main_200};\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: .25em;\n  transition: 120ms all ease-in-out;\n  width: 100%;\n  height: 35px;\n`;\n\nexport const ItemContent = styled.main`\n  box-sizing: border-box;\n  background-color: ${props => props.theme.colors.main_400};\n  border: 2px solid ${props => props.theme.colors.main_200};\n  padding: .5em;\n  display: ${props => props.hidden ? 'none' : 'flex'};\n  width: 100%;\n  height: auto;\n  border-radius: 0 0 4px 4px;\n  flex-direction: column;\n`;\n\nexport const IconButton = styled.button`\n  padding: .3em;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  color: ${props => props.theme.colors.text};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ntype HeaderLinkProps = {\n  danger?: boolean;\n};\n\nexport const HeaderLink = styled.a<HeaderLinkProps>`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props => props.danger ? props.theme.colors.danger : props.theme.colors.text};\n  width: 35px;\n  height: 100%;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import * as React from 'react';\nimport styled from '../../styles/styledComponents';\nimport { modularSize } from '../../styles/typography';\nimport { rgba } from 'polished';\n\nconst FFieldset = styled.fieldset`\n  box-sizing: border-box;\n  width: 100%;\n  height: auto;\n  padding: 0.5em;\n  border: 1px solid ${props => rgba(props.theme.colors.text, 0.45)};\n  border-radius: 3px;\n  color: ${props => props.theme.colors.text};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FLegend = styled.legend`\n  box-sizing: border-box;\n  padding: .3em;\n  background-color: ${props => props.theme.colors.main_400};\n  border: ${props => props.theme.colors.text};\n  border-radius: 4px;\n  color: ${props => props.theme.colors.text};\n  font-size: ${modularSize(-1)};\n`;\n\nexport type FormFieldsetProps = {\n  legend: string,\n  children?: React.ReactNode,\n};\n\nexport const FormFieldset = (props: FormFieldsetProps) => {\n  const { legend, children } = props;\n  return (\n    <FFieldset>\n      <FLegend>{legend}</FLegend>\n      {children}\n    </FFieldset>\n  );\n};\n","import styled from '../../../../../../../styles/styledComponents';\n\nexport const CList = styled.ul`\n  box-sizing: border-box;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n`;\n\nexport const CListItem = styled.li`\n  box-sizing: border-box;\n  margin: 0;\n  padding: .5em;\n  width: 100%;\n`;","import styled from '../../../../../../../styles/styledComponents';\nimport { modularSize } from '../../../../../../../styles/typography';\n\ntype ColorSampleProps = {\n  background: string,\n};\n\nexport const CSample = styled.div<ColorSampleProps>`\n  width: 40px;\n  height: 40px;\n  background-color: ${props => props.background};\n  border-radius: 4px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\n\nexport const CWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  color: ${props => props.theme.colors.text};\n  border-radius: 4px;\n  padding: .5em;\n  margin: 0;\n`;\n\nexport const CName = styled.span`\n  width: 50%;\n  font-size: ${modularSize(-1.65)};\n  box-sizing: border-box;\n  margin-left: .5em;\n  padding-right: 1em;\n`;\n\nexport const CManager = styled.div`\n  width: 30%;\n  display: flex;\n  box-sizing: border-box;\n`;\n\nexport const CLink = styled.a`\n  font-size: ${modularSize(-1.65)};\n  box-sizing: border-box;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50%;\n  height: inherit;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const CPickerWrapper = styled.div`\n  position: absolute;\n  z-index: 10;\n  right: 3em;\n  top: 3em;\n  .sketch-picker input {\n    color: #212121 !important;\n  }\n`;","import { Dispatch } from 'redux';\nimport * as payloads from './_payloads';\nimport * as actions from './actions';\nimport * as helpers from './helpers';\nimport * as selectors from './selectors';\nimport { Gradient } from '../_types';\nimport { EditorAction, EditorReducer } from './reducer';\n\nconst decideAboutChroma = (state: any, id: string) => (dispatch: Dispatch) => {\n  const gradient: Gradient = <Gradient>selectors.fromGradients(state, id);\n  if (gradient.useChroma && gradient.colors.length >= 2) {\n    dispatch(actions.computeChromaColors(id));\n  }\n}\n\nexport const setGradientType = (payload: payloads.GradientTypePayload) =>\n  (\n    dispatch: Dispatch<EditorAction>,\n    getState: () => EditorReducer,\n  ) => {\n    dispatch(actions.setGradientType(payload));\n    dispatch(actions.replaceGradientAttributes({\n      ...payload,\n      attributes: payload.type === 'linear'\n        ? helpers.defaultLinearAttributes()\n        : helpers.defaultRadialAttributes(),\n    }));\n    decideAboutChroma(getState(), payload.id)(dispatch as Dispatch);\n  };\n\nexport const addColor = (payload: payloads.ColorPayload) =>\n  (\n    dispatch: Dispatch<EditorAction>,\n    getState: () => EditorReducer,\n  ) => {\n    dispatch(actions.addColor(payload));\n    decideAboutChroma(getState(), payload.gradientId)(dispatch as Dispatch);\n  };\n\nexport const deleteColor = (payload: payloads.ColorPayload) =>\n  (\n    dispatch: Dispatch<EditorAction>,\n    getState: () => EditorReducer,\n  ) => {\n    dispatch(actions.deleteColor(payload));\n    decideAboutChroma(getState(), payload.gradientId)(dispatch as Dispatch);\n  };\n\nexport const editColor = (payload: payloads.ColorEditionPayload) =>\n  (\n    dispatch: Dispatch<EditorAction>,\n    getState: () => EditorReducer,\n  ) => {\n    dispatch(actions.editColor(payload));\n    decideAboutChroma(getState(), payload.gradientId)(dispatch as Dispatch);\n  };\n\nexport const toggleChroma = (payload: string) =>\n  (\n    dispatch: Dispatch<EditorAction>,\n    getState: () => EditorReducer,\n  ) => {\n    dispatch(actions.toggleChroma(payload));\n    decideAboutChroma(getState(), payload)(dispatch as Dispatch);\n  };\n\nexport const setAttribute = (payload: payloads.AttributeEditionPayload) =>\n  (\n    dispatch: Dispatch<EditorAction>,\n    getState: () => EditorReducer,\n  ) => {\n    dispatch(actions.setAttribute(payload));\n    decideAboutChroma(getState(), payload.id)(dispatch as Dispatch);\n  };\n\nexport const setChromaAttribute = (payload: payloads.ChromaEditionPayload) =>\n  (\n    dispatch: Dispatch<EditorAction>,\n    getState: () => EditorReducer,\n  ) => {\n    dispatch(actions.setChromaAttribute(payload));\n    decideAboutChroma(getState(), payload.id)(dispatch as Dispatch);\n  };","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport { SketchPicker, ColorResult } from 'react-color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  CSample,\n  CWrapper,\n  CName,\n  CManager,\n  CLink,\n  CPickerWrapper\n} from './layout';\nimport { InputColor } from '../../../../../../../store/_types';\nimport * as selectors from '../../../../../../../store/editor/selectors';\nimport * as thunks from '../../../../../../../store/editor/thunks';\nimport * as payloads from '../../../../../../../store/editor/_payloads';\n\nexport type ColorComponentProps = {\n  colorId: string,\n  gradientId: string,\n  color: InputColor,\n  editColor: (payload: payloads.ColorEditionPayload) => void,\n  deleteColor: (payload: payloads.ColorPayload) => void,\n};\n\nconst ColorComponent = (props: ColorComponentProps) => {\n  const { color, editColor, deleteColor, colorId, gradientId } = props;\n  const [ picker, togglePicker ] = React.useState(false);\n\n  let pickerParent: React.MutableRefObject<null | HTMLDivElement> = React.useRef(null);\n\n  const outsideClickHandler = () => {\n    const clickHandler = (event: MouseEvent) => {\n      if (\n        pickerParent.current !== null &&\n        !(pickerParent.current as HTMLDivElement).contains(event.target as HTMLDivElement)\n      ) {\n        togglePicker(false);\n        document.removeEventListener('click', clickHandler, false);\n      } else if (pickerParent.current === null) {\n        document.removeEventListener('click', clickHandler, false);\n      }\n    };\n    if (pickerParent && picker) {\n      document.addEventListener('click', clickHandler, false);\n    }\n  };\n  React.useEffect(outsideClickHandler, [picker]);\n\n  const renderPicker = () => picker\n    ? <CPickerWrapper ref={pickerParent}>\n      <SketchPicker\n        color={{\n          r: color.color[0],\n          g: color.color[1],\n          b: color.color[2],\n          a: color.color[3] || 1,\n        }}\n        onChangeComplete={(newColor: ColorResult) => editColor({\n          gradientId,\n          colorId,\n          color: [\n            newColor.rgb.r,\n            newColor.rgb.g,\n            newColor.rgb.b,\n            newColor.rgb.a as number,\n          ],\n        })}\n      />\n    </CPickerWrapper>\n    : null;\n\n  return (\n    <CWrapper>\n      <CSample\n        background={`rgba(${[...color.color]})`}\n        onClick={() => togglePicker(!picker)}\n      />\n      <CName>\n        <strong>R</strong> {color.color[0]},&nbsp;\n        <strong>G</strong> {color.color[1]},&nbsp;\n        <strong>B</strong> {color.color[2]},&nbsp;\n        <strong>A</strong> {color.color[3] || 1}\n      </CName>\n      <CManager>\n        <CLink\n          title=\"Edit color\"\n          onClick={() => togglePicker(!picker)}\n        >\n          <FontAwesomeIcon icon=\"edit\" />\n        </CLink>\n        <CLink\n          title=\"Delete color\"\n          onClick={() => deleteColor({\n            gradientId,\n            colorId,\n          })}\n        >\n          <FontAwesomeIcon icon=\"trash\" />\n        </CLink>\n      </CManager>\n      {renderPicker()}\n    </CWrapper>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  color: selectors.colorById(state, ownProps.gradientId)(ownProps.colorId),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  editColor: thunks.editColor,\n  deleteColor: thunks.deleteColor,\n}, dispatch);\n\nexport const Color = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { pure: false },\n)(ColorComponent as React.ComponentType);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { CList, CListItem } from './layout';\nimport { Color } from '../color/Color';\nimport * as selectors from '../../../../../../../store/editor/selectors';\n\ntype ColorListComponentProps = {\n  colorIdsList: string[],\n  gradientId: string,\n};\n\nclass ColorListComponent extends React.Component<ColorListComponentProps> {\n\n  public render() {\n    const { colorIdsList } = this.props;\n    return (\n      <CList>\n        {colorIdsList.length > 0 ? this.renderColors() : null}\n      </CList>\n    );\n  }\n\n  private renderColors = () => {\n    return this.props.colorIdsList\n      .map((id: string) => (\n        <CListItem key={id}>\n          <Color\n            colorId={id}\n            gradientId={this.props.gradientId}\n          />\n        </CListItem>\n      ));\n  }\n  \n  public shouldComponentUpdate(nextProps: ColorListComponentProps, nextState: any) {\n    if (nextProps.colorIdsList.length !== this.props.colorIdsList.length) {\n      return true;\n    }\n    return false;\n  }\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  colorIdsList: selectors.colorIdsFromGradient(state, ownProps.gradientId),\n});\n\nexport const ColorList = connect(\n  mapStateToProps,\n  null,\n  null,\n  { pure: true },\n)(ColorListComponent);\n","import * as React from 'react';\nimport nanoid from 'nanoid';\nimport Switch from 'react-switch';\nimport { FormLabel } from './FormLabel';\n\nexport type FormSwitchProps = {\n  label: string,\n  checked: boolean,\n  onChange: (value?: boolean) => void,\n  disabled?: boolean,\n};\n\nexport const FormSwitch = (props: FormSwitchProps) => {\n  const { label, checked, onChange, disabled } = props;\n  return (\n    <React.Fragment>\n      <FormLabel>\n        {label}:\n      </FormLabel>\n      <Switch\n        id={nanoid()}\n        checked={checked}\n        width={35}\n        height={20}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        onChange={onChange}\n        onColor=\"#5383D6\"\n        offColor=\"#A4BCAD\"\n        disabled={disabled || false}\n      />\n    </React.Fragment>\n  );\n};","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport nanoid from 'nanoid';\nimport { FormRow } from '../../../../../../form/FormRow';\nimport { FormButton } from '../../../../../../form/FormButton';\nimport { FormSwitch } from '../../../../../../form/FormSwitch';\nimport * as selectors from '../../../../../../../store/editor/selectors';\nimport * as actions from '../../../../../../../store/editor/actions';\nimport * as thunks from '../../../../../../../store/editor/thunks';\nimport * as payloads from '../../../../../../../store/editor/_payloads';\n\ntype ColorsHeaderComponentProps = {\n  id: string,\n  colorsAmount: number,\n  chroma: boolean,\n  addColor: (payload: payloads.ColorPayload) => (dispatch: Dispatch) => void,\n  deleteAllColors: (payload: string) => void,\n  toggleChroma: (payload: string) => void,\n};\n\nclass ColorsHeaderComponent extends React.PureComponent<ColorsHeaderComponentProps> {\n  public render() {\n    const {\n      colorsAmount,\n      addColor,\n      id,\n      deleteAllColors,\n      toggleChroma,\n      chroma,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <FormRow>\n          <FormButton\n            style={{ marginRight: '1em' }}\n            title=\"Add Color\"\n            onClick={(event?: React.MouseEvent) => {\n              (event as React.MouseEvent).preventDefault();\n              addColor({\n                gradientId: id,\n                colorId: nanoid(),\n              })\n            }}\n          >\n            Add Color\n          </FormButton>\n          <FormButton\n            disabled={colorsAmount < 1}\n            level=\"danger\"\n            onClick={(event?: React.MouseEvent) => {\n              (event as React.MouseEvent).preventDefault();\n              deleteAllColors(id);\n            }}\n            title=\"Delete All\"\n          >\n            Delete All\n          </FormButton>\n        </FormRow>\n        <FormRow>\n          <FormSwitch\n            label=\"Use chroma\"\n            checked={chroma}\n            disabled={colorsAmount < 2}\n            onChange={() => toggleChroma(id)}\n          />\n        </FormRow>\n      </React.Fragment>\n    );\n  }\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  colorsAmount: selectors.colorsAmountInGradient(state, ownProps.id),\n  chroma: selectors.isUsingChroma(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  addColor: thunks.addColor,\n  deleteAllColors: actions.deleteAllColors,\n  toggleChroma: thunks.toggleChroma,\n}, dispatch);\n\nexport const ColorsHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  // @ts-ignore\n)(ColorsHeaderComponent);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport { FormFieldset } from '../../../../../form/FormFieldset';\nimport { FormRow } from '../../../../../form/FormRow';\nimport { ColorList } from './list/ColorList';\nimport { ColorsHeader } from './header/ColorsHeader';\nimport * as selectors from '../../../../../../store/editor/selectors';\nimport * as actions from '../../../../../../store/editor/actions';\n\ntype ColorsComponentProps = {\n  id: string,\n  colorsAmount: number,\n};\n\nconst ColorsComponent = (props: ColorsComponentProps): React.ReactNode => {\n\n  const { id } = props;\n\n  return (\n    <FormFieldset legend=\"Colors\">\n      <ColorsHeader id={id} />\n      <FormRow>\n        <ColorList gradientId={id} />\n      </FormRow>\n    </FormFieldset>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  chroma: selectors.isUsingChroma(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  addColor: actions.addColor,\n  deleteAllColors: actions.deleteAllColors,\n  toggleChroma: actions.toggleChroma,\n}, dispatch);\n\nexport const Colors = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ColorsComponent as React.ComponentType);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux'; \nimport { FormRow } from '../../../../../../form/FormRow';\nimport { FormSelect } from '../../../../../../form/FormSelect';\nimport * as selectors from '../../../../../../../store/editor/selectors';\nimport * as payloads from '../../../../../../../store/editor/_payloads';\nimport { setGradientType } from '../../../../../../../store/editor/thunks';\n\ntype GradientTypeComponentProps = {\n  id: string,\n  gradientType: 'linear' | 'radial',\n  setGradientType: (payload: payloads.GradientTypePayload) => void,\n};\n\nconst GradientTypeComponent = (props: GradientTypeComponentProps) => {\n  const [ options ] = React.useState(['linear', 'radial']);\n  const { id, gradientType, setGradientType } = props;\n  return (\n    <FormRow>\n      <FormSelect\n        options={options}\n        label=\"Type\"\n        value={gradientType}\n        onChange={(event?: React.ChangeEvent) => setGradientType({\n          id,\n          type: ((event as React.ChangeEvent).target as HTMLSelectElement).value as 'linear' | 'radial',\n        })}\n      />\n    </FormRow>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  gradientType: selectors.typeofGradient(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  setGradientType,\n}, dispatch);\n\nexport const GradientType = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GradientTypeComponent as React.ComponentType);\n","\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { FormRow } from '../../../../../../form/FormRow';\nimport { FormSwitch } from '../../../../../../form/FormSwitch';\nimport * as selectors from '../../../../../../../store/editor/selectors';\nimport { toggleFocalPoints } from '../../../../../../../store/editor/actions';\n\ntype FocalPointsComponentProps = {\n  id: string,\n  focalPoints: boolean,\n  toggleFocalPoints: (payload: string) => boolean,\n};\n\nconst FocalPointsComponent = (props: FocalPointsComponentProps) => {\n  const { focalPoints, id, toggleFocalPoints } = props;\n  return (\n    <FormRow>\n      <FormSwitch\n        label=\"focal points\"\n        checked={focalPoints}\n        onChange={() => toggleFocalPoints(id)}\n      />\n    </FormRow>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  focalPoints: selectors.hasFocalPoints(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  toggleFocalPoints,\n}, dispatch);\n\nexport const FocalPoints = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(FocalPointsComponent as React.ComponentType);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { typeofGradient } from '../../../../../../store/editor/selectors';\nimport { FormFieldset } from '../../../../../form/FormFieldset';\nimport { GradientType } from './type/GradientType';\nimport { FocalPoints } from './focal_points/FocalPoints';\n\ntype PropertiesComponentProps = {\n  id: string,\n  type: 'linear' | 'radial',\n};\n\nconst PropertiesComponent = (props: PropertiesComponentProps) => {\n  const { id, type } = props;\n  return (\n    <FormFieldset legend=\"Properties\">\n      <GradientType id={id} />\n      {\n        type === 'radial'\n        ? <FocalPoints id={id} />\n        : null\n      }\n    </FormFieldset>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  type: typeofGradient(state, ownProps.id),\n});\n\nexport const Properties = connect(\n  mapStateToProps,\n  null,\n)(PropertiesComponent);\n","import * as React from 'react';\nimport { FormLabel } from './FormLabel';\nimport styled from '../../styles/styledComponents';\nimport { modularSize } from '../../styles/typography';\nimport { AppTheme } from '../../styles/themes';\n\ntype FRangeInputProps = {\n  width?: string,\n};\n\nconst thumbStyles = (theme: AppTheme): string => `\n  height: 16px;\n  width: 16px;\n  border-radius: 4px;\n  background: ${theme.colors.primary};\n`;\n\nconst trackStyles = (theme: AppTheme): string => `\n  width: 100%;\n  height: 16px;\n  cursor: pointer;\n  background: ${theme.colors.main_300};\n  border-radius: 4px;\n  border: none;\n`;\n\nconst FRangeInput = styled.input<FRangeInputProps>`\n  -webkit-appearance: none;\n  margin-right: .5em;\n  background: transparent;\n  width: ${props => props.width || '100%'};\n  height: 35px;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    ${props => thumbStyles(props.theme)};\n  }\n\n  &::-moz-range-thumb {\n    ${props => thumbStyles(props.theme)};\n  }\n\n  &::-ms-thumb {\n    ${props => thumbStyles(props.theme)};\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &::ms-track {\n    width: ${props => props.width || '100%'};\n    cursor: pointer;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n    ${props => trackStyles(props.theme)};\n  }\n\n  &::-webkit-slider-runnable-track {\n    ${props => trackStyles(props.theme)};\n  }\n  \n  &::-moz-range-track {\n    ${props => trackStyles(props.theme)};\n  }\n`;\n\nconst FRangeValue = styled.span`\n  width: 50px;\n  font-weight: bold;\n  font-size: ${modularSize(-1)};\n  text-align: right;\n`;\n\nexport type FormRangeProps = {\n  label: string,\n  value: number,\n  min: number,\n  max: number,\n  step: number,\n  onChange: (event: React.ChangeEvent) => void,\n  inputWidth: string,\n  labelWidth: string,\n};\n\nexport const FormRange = (props: FormRangeProps) => {\n  const {\n    label,\n    value,\n    min,\n    max,\n    step,\n    onChange,\n    inputWidth,\n    labelWidth,\n  } = props;\n  return (\n    <React.Fragment>\n      <FormLabel style={{ width: labelWidth }}>\n        {label}:\n      </FormLabel>\n      <FRangeInput\n        width={inputWidth}\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChange}\n      />\n      <FRangeValue>\n        {value}\n      </FRangeValue>\n    </React.Fragment>\n  );\n};","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormFieldset } from '../../../../../form/FormFieldset';\nimport { FormRow } from '../../../../../form/FormRow';\nimport { FormRange } from '../../../../../form/FormRange';\nimport { FormSelect } from '../../../../../form/FormSelect';\nimport * as selectors from '../../../../../../store/editor/selectors';\nimport * as payloads from '../../../../../../store/editor/_payloads';\nimport { setAttribute } from '../../../../../../store/editor/thunks';\nimport { LinearGradientAttributes, RadialGradientAttributes } from '../../../../../../store/_types';\nimport { Dispatch, bindActionCreators } from 'redux';\n\ntype AttributesComponentProps = {\n  id: string,\n  gradientType: 'linear' | 'radial',\n  attributes: LinearGradientAttributes | RadialGradientAttributes,\n  focalPoints: boolean,\n  setAttribute: (payload: payloads.AttributeEditionPayload) => void,\n};\n\nconst AttributesComponent = (props: AttributesComponentProps) => {\n  const inputWidth: string = '70%';\n  const labelWidth: string = '30px';\n  const {\n    id,\n    attributes,\n    setAttribute,\n    focalPoints,\n    gradientType,\n  } = props;\n  const renderLinearAttributes = () => (\n    <React.Fragment>\n      <FormRow>\n        <FormRange\n          inputWidth={inputWidth}\n          labelWidth={labelWidth}\n          label=\"x1\"\n          min={-1}\n          max={1}\n          step={0.01}\n          value={(attributes as LinearGradientAttributes).x1}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'x1',\n            value: parseFloat((event.target as HTMLInputElement).value)\n          })}\n        />\n      </FormRow>\n      <FormRow>\n        <FormRange\n          inputWidth={inputWidth}\n          labelWidth={labelWidth}\n          label=\"y1\"\n          min={-1}\n          max={1}\n          step={0.01}\n          value={(attributes as LinearGradientAttributes).y1}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'y1',\n            value: parseFloat((event.target as HTMLInputElement).value)\n          })}\n        />\n      </FormRow>\n      <FormRow>\n        <FormRange\n          inputWidth={inputWidth}\n          labelWidth={labelWidth}\n          label=\"x2\"\n          min={-1}\n          max={1}\n          step={0.01}\n          value={(attributes as LinearGradientAttributes).x2}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'x2',\n            value: parseFloat((event.target as HTMLInputElement).value)\n          })}\n        />\n      </FormRow>\n      <FormRow>\n        <FormRange\n          inputWidth={inputWidth}\n          labelWidth={labelWidth}\n          label=\"y2\"\n          min={-1}\n          max={1}\n          step={0.01}\n          value={(attributes as LinearGradientAttributes).y2}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'y2',\n            value: parseFloat((event.target as HTMLInputElement).value)\n          })}\n        />\n      </FormRow>\n    </React.Fragment>\n  );\n  const renderRadialAttributes = () => (\n    <React.Fragment>\n      <FormRow>\n        <FormRange\n          inputWidth={inputWidth}\n          labelWidth={labelWidth}\n          label=\"cx\"\n          min={-1}\n          max={1}\n          step={0.01}\n          value={(attributes as RadialGradientAttributes).cx}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'cx',\n            value: parseFloat((event.target as HTMLInputElement).value)\n          })}\n        />\n      </FormRow>\n      <FormRow>\n        <FormRange\n          inputWidth={inputWidth}\n          labelWidth={labelWidth}\n          label=\"cy\"\n          min={-1}\n          max={1}\n          step={0.01}\n          value={(attributes as RadialGradientAttributes).cy}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'cy',\n            value: parseFloat((event.target as HTMLInputElement).value)\n          })}\n        />\n      </FormRow>\n      <FormRow>\n        <FormRange\n          inputWidth={inputWidth}\n          labelWidth={labelWidth}\n          label=\"r\"\n          min={0.01}\n          max={1}\n          step={0.01}\n          value={(attributes as RadialGradientAttributes).r}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'r',\n            value: parseFloat((event.target as HTMLInputElement).value)\n          })}\n        />\n      </FormRow>\n      {\n        focalPoints\n          ? <React.Fragment>\n            <FormRow>\n              <FormRange\n                inputWidth={inputWidth}\n                labelWidth={labelWidth}\n                label=\"fx\"\n                min={-1}\n                max={1}\n                step={0.01}\n                value={(attributes as RadialGradientAttributes).fx}\n                onChange={(event: React.ChangeEvent) => setAttribute({\n                  id,\n                  attribute: 'fx',\n                  value: parseFloat((event.target as HTMLInputElement).value)\n                })}\n              />\n            </FormRow>\n            <FormRow>\n              <FormRange\n                inputWidth={inputWidth}\n                labelWidth={labelWidth}\n                label=\"fy\"\n                min={-1}\n                max={1}\n                step={0.01}\n                value={(attributes as RadialGradientAttributes).fy}\n                onChange={(event: React.ChangeEvent) => setAttribute({\n                  id,\n                  attribute: 'fy',\n                  value: parseFloat((event.target as HTMLInputElement).value)\n                })}\n              />\n            </FormRow>\n          </React.Fragment>\n          : null\n      }\n      <FormRow>\n        <FormSelect\n          label=\"spread method\"\n          options={['pad', 'repeat', 'reflect']}\n          value={(attributes as RadialGradientAttributes).spreadMethod}\n          onChange={(event: React.ChangeEvent) => setAttribute({\n            id,\n            attribute: 'spreadMethod',\n            value: (event.target as HTMLInputElement).value,\n          })}\n        />\n      </FormRow>\n    </React.Fragment>\n  );\n\n  return (\n    <FormFieldset legend=\"Attributes\">\n      {\n        gradientType === 'linear'\n        ? renderLinearAttributes()\n        : renderRadialAttributes()\n      }\n    </FormFieldset>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  gradientType: selectors.typeofGradient(state, ownProps.id),\n  attributes: selectors.attributesOf(state, ownProps.id),\n  focalPoints: selectors.hasFocalPoints(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  setAttribute,\n}, dispatch);\n\nexport const Attributes = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AttributesComponent as React.ComponentType);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormFieldset } from '../../../../../form/FormFieldset';\nimport { FormRow } from '../../../../../form/FormRow';\nimport { FormRange } from '../../../../../form/FormRange';\nimport { FormSwitch } from '../../../../../form/FormSwitch';\nimport { FormSelect } from '../../../../../form/FormSelect';\nimport * as selectors from '../../../../../../store/editor/selectors';\nimport { setChromaAttribute } from '../../../../../../store/editor/thunks';\nimport { ChromaEditionPayload } from '../../../../../../store/editor/_payloads';\nimport { ChromaAttributes, ColorInterpolation, ColorMode } from '../../../../../../store/_types';\nimport { Dispatch, bindActionCreators } from 'redux';\n\ntype ChromaAttributesComponentProps = {\n  id: string,\n  chromaAttributes: ChromaAttributes,\n  setChromaAttribute: (payload: ChromaEditionPayload) => void,\n};\n\nconst ChromaAttributesComponent = (props: ChromaAttributesComponentProps) => {\n  const [ interpolations ] = React.useState([\n    'linear', 'bezier',\n  ]);\n  const [ modes ] = React.useState([\n    'rgb',\n    'lch',\n    'hsv',\n    'lab',\n    'hsi',\n    'hsl',\n    'hcl',\n  ]);\n  const {\n    interpolation,\n    lightnessCorrection,\n    mode,\n    samples,\n  } = props.chromaAttributes;\n  const { id, setChromaAttribute } = props;\n  return (\n    <FormFieldset legend=\"Chroma\">\n      <FormRow>\n        <FormSelect\n          label=\"interpolation\"\n          options={interpolations}\n          value={interpolation}\n          onChange={(event: React.ChangeEvent) => setChromaAttribute({\n            id,\n            attribute: 'interpolation',\n            value: (event.target as HTMLInputElement).value as ColorInterpolation\n          })}\n        />\n      </FormRow>\n      {\n        interpolation === 'linear'\n          ? <FormRow>\n            <FormSelect\n              label=\"mode\"\n              options={modes}\n              value={mode}\n              onChange={(event: React.ChangeEvent) => setChromaAttribute({\n                id,\n                attribute: 'mode',\n                value: (event.target as HTMLInputElement).value as ColorMode,\n              })}\n            />\n          </FormRow>\n          : null\n      }\n      <FormRow>\n        <FormSwitch\n          label=\"lightness correction\"\n          checked={lightnessCorrection}\n          onChange={(value?: boolean) => setChromaAttribute({\n            id,\n            value: (value as boolean),\n            attribute: 'lightnessCorrection',\n          })}\n        />\n      </FormRow>\n      <FormRow>\n        <FormRange\n          inputWidth=\"40%\"\n          labelWidth=\"20%\"\n          label=\"Samples\"\n          min={2}\n          max={30}\n          step={1}\n          value={samples}\n          onChange={(event: React.ChangeEvent) => setChromaAttribute({\n            id,\n            attribute: 'samples',\n            value: parseInt((event.target as HTMLInputElement).value),\n          })}\n        />\n      </FormRow>\n    </FormFieldset>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: string }) => ({\n  chromaAttributes: selectors.chromaAttributesOf(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  setChromaAttribute,\n}, dispatch);\n\nexport const Chroma = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ChromaAttributesComponent as React.ComponentType);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Item, ItemHeader, ItemContent, IconButton, HeaderLink } from './layout';\nimport { Colors } from './colors/Colors';\nimport { Properties } from './properties/Properties';\nimport { Attributes } from './attributes/Attributes';\nimport { Chroma } from './chroma/Chroma';\nimport * as actions from '../../../../../store/editor/actions';\nimport { isUsingChroma, colorsAmountInGradient } from '../../../../../store/editor/selectors'\n\ntype ListItemComponentProps = {\n  id: string,\n  index: number,\n  chroma: boolean,\n  colorsAmount: number,\n  deleteGradient: (id: string) => void,\n};\n\nconst ListItemComponent = (props: ListItemComponentProps) => {\n\n  const [ collapsed, toggleCollapsed ] = React.useState(false);\n  const { colorsAmount, chroma, index, id, deleteGradient } = props;\n  const renderContent = () => collapsed ? null : <ItemContent>\n    <Colors id={id} />\n    {\n      chroma && colorsAmount >= 2\n        ? <Chroma id={id} />\n        : null\n    }\n    <Properties id={id} />\n    <Attributes id={id} />\n  </ItemContent>\n  return (\n    <Item>\n      <ItemHeader>\n        <HeaderLink\n          title=\"Toggle gradient\"\n          onClick={(event: React.MouseEvent) => {\n            event.preventDefault();\n            toggleCollapsed(!collapsed);\n          }}\n        >\n          <FontAwesomeIcon\n            icon={collapsed ? 'caret-down' : 'caret-up'}\n          />\n        </HeaderLink>\n        <span>Gradient {index + 1}</span>\n        <HeaderLink\n          title=\"Delete gradient\"\n          onClick={() => deleteGradient(id)}\n          danger\n        >\n          <FontAwesomeIcon icon=\"trash\" />\n        </HeaderLink>\n      </ItemHeader>\n      {renderContent()}\n    </Item>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: { [key: string]: any }) => ({\n  chroma: isUsingChroma(state, ownProps.id),\n  colorsAmount: colorsAmountInGradient(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  deleteGradient: actions.deleteGradient,\n}, dispatch);\n\nexport const ListItem = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { pure: false },\n)(ListItemComponent);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { SContent, ContentList } from './layout';\nimport { ListItem } from './list_item/ListItem';\nimport * as selectors from '../../../../store/editor/selectors';\n\ntype SettingsContentComponentProps = {\n  idList: string[],\n};\n\nclass SettingsContentComponent extends React.Component<SettingsContentComponentProps> {\n  public render(): React.ReactNode {\n    return (\n      <SContent>\n        <ContentList>\n          {this.renderList()}\n        </ContentList>\n      </SContent>\n    );\n  }\n\n  private renderList = () => {\n    return this.props.idList\n      .map((id: string): React.ReactElement<string> => (\n        <ListItem\n          key={id}\n          id={id}\n          index={this.props.idList.indexOf(id)}\n        />\n      ));\n  }\n\n  public shouldComponentUpdate(nextProps: SettingsContentComponentProps, nextState: any) {\n    if (nextProps.idList.length !== this.props.idList.length) {\n      return true;\n    }\n    return false;\n  }\n\n\n}\n\nconst mapStateToProps = (state: any) => ({\n  idList: selectors.idList(state),\n});\n\nexport const SettingsContent = connect(\n  mapStateToProps,\n  null,\n  null,\n  { pure: false },\n)(SettingsContentComponent);\n","import * as React from 'react';\nimport nanoid from 'nanoid';\nimport { SettingsWrapper } from './layout';\nimport { SettingsHeader } from './header/SettingsHeader';\nimport { SettingsContent } from './content/SettingsContent';\n\nexport const Settings = () => {\n  const presetRootId: string = nanoid();\n  return (\n    <SettingsWrapper id={presetRootId}>\n      <SettingsHeader presetRootId={presetRootId} />\n      <SettingsContent />\n    </SettingsWrapper>\n  )\n};\n\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport nanoid from 'nanoid';\nimport { gradients } from '../../../store/editor/selectors';\nimport { Gradient, OutputColor, InputColor, RadialGradientAttributes } from '../../../store/_types';\n\nconst SVGGradient = (props: { gradient: Gradient }): JSX.Element => {\n  const renderStops = () => {\n    if (props.gradient.useChroma) {\n      return props.gradient.output.map(\n        (color: OutputColor) => (\n          <stop\n            key={nanoid()}\n            offset={`${color.offset}%`}\n            stopColor={`rgba(${color.color[0]}, ${color.color[1]}, ${color.color[2]}, ${color.color[3]})`}\n          />\n        )\n      )\n    } else {\n      return props.gradient.colors.map(\n        (color: InputColor) => (\n          <stop\n            key={color.id}\n            stopColor={`rgba(${color.color[0]}, ${color.color[1]}, ${color.color[2]}, ${color.color[3]})`}\n            offset={`${props.gradient.colors.indexOf(color) * (100 / props.gradient.colors.length)}%`}\n          />\n        )\n      )\n    }\n  };\n  if (props.gradient.type === 'linear') {\n    return (\n      <linearGradient\n        gradientUnits=\"objectBoundingBox\"\n        id={props.gradient.id}\n        {...props.gradient.attributes}\n      >\n        {renderStops()} \n      </linearGradient>\n    );\n  } else {\n    const {\n      cx, cy, r, fx, fy, spreadMethod\n    } = props.gradient.attributes as RadialGradientAttributes;\n    // @ts-ignore\n    const _spreadMethod = spreadMethod === 'none' ? undefined : spreadMethod;\n    return (\n      <radialGradient\n        gradientUnits=\"objectBoundingBox\"\n        id={props.gradient.id}\n        cx={cx}\n        cy={cy}\n        r={r}\n        fx={props.gradient.focalPoints ? fx : undefined}\n        fy={props.gradient.focalPoints ? fy : undefined}\n        spreadMethod={_spreadMethod as ('pad' | 'repeat' | 'reflect')}\n      >\n        {renderStops()}\n      </radialGradient>\n    )\n  }\n};\n\nexport type DefsRendererProps = {\n  gradients: Gradient[],\n};\n\nconst DefsRendererComponent = (props: DefsRendererProps) => {\n  return (\n    <defs>\n      {props.gradients.map((gradient: Gradient) => (\n        <SVGGradient\n          key={gradient.id}\n          gradient={gradient}\n        />\n      ))}\n    </defs>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  gradients: gradients(state),\n});\n\nexport const DefsRenderer = connect(\n  mapStateToProps,\n  null,\n  null,\n  { pure: false },\n)(DefsRendererComponent)","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { idList } from '../../../store/editor/selectors';\nimport nanoid from 'nanoid';\n\nexport type FiguresRendererProps = {\n  gradients: string[],\n};\n\nconst FiguresRendererComponent = (props: FiguresRendererProps): JSX.Element => {\n  return (\n    <g>\n      {\n        props.gradients.map(\n          (gradient: string) => {\n            const key: string = nanoid();\n            return (\n              <rect\n                key={key}\n                id={key}\n                x={0}\n                y={0}\n                width=\"100%\"\n                height=\"100%\"\n                fill={`url(#${gradient})`}\n              />\n            )\n          },\n        )\n      }\n    </g>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  gradients: idList(state),\n});\n\nexport const FiguresRenderer = connect(\n  mapStateToProps,\n  null,\n)(FiguresRendererComponent);","import * as React from 'react';\nimport styled from '../../styles/styledComponents';\nimport { mediaMixin } from '../../styles/mixins';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SIWrapper = styled.a`\n  position: absolute;\n  bottom: .5em;\n  right: calc(400px + .5em);\n  z-index: 2;\n  text-decoration: none;\n  color: ${props => props.theme.colors.text};\n  mix-blend-mode: difference;\n  ${props => mediaMixin(props.theme, {\n    sm: `\n      right: .5em;\n      bottom: calc(280px + 0.5em);\n    `,\n    md: `\n      bottom: .5em;\n    `,\n  })}\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ntype SaveIconProps = {\n  download: () => void,\n};\n\nexport const SaveIcon = (props: SaveIconProps) => {\n  return (\n    <SIWrapper\n      title=\"Get SVG markup\"\n      onClick={props.download}\n    >\n      <FontAwesomeIcon\n        icon=\"code\"\n        size=\"2x\"\n      />\n    </SIWrapper>\n  );\n};\n","import * as React from 'react';\nimport styled from '../../../styles/styledComponents';\nimport { DefsRenderer } from './DefsRenderer';\nimport { FiguresRenderer } from './FiguresRenderer';\nimport { SaveIcon } from '../../common/SaveIcon';\nimport saveAs from 'file-saver';\n\nconst ArtboardSVG = styled.svg`\n  box-sizing: border-box;\n  width: 100%;\n  min-height: calc(100vh - 5px);\n`;\n\nconst Artboard = () => {\n  \n  const svg = React.useRef(null);\n  const download = () => {\n    if (svg) {\n      // @ts-ignore\n      const content: string = svg.current.outerHTML;\n      const file = new Blob([content], {\n        type: 'text/plain;charset=utf-8',\n      });\n      // @ts-ignore\n      saveAs(file, 'gradient.svg');\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ArtboardSVG ref={svg}>\n        <DefsRenderer />\n        <FiguresRenderer />\n      </ArtboardSVG>\n      <SaveIcon download={download} />\n    </React.Fragment>\n  );\n}\n\nexport { Artboard };\n","import * as React from 'react';\nimport { EditorMain } from './components/layout/EditorMain';\nimport { EditorArea } from './components/layout/EditorArea';\nimport { EditorBar } from './components/layout/EditorBar';\nimport { Settings } from '../../components/editor/settings/Settings';\nimport { Artboard } from '../../components/editor/artboard/Artboard';\n\nexport const Editor = () => {\n  return (\n    <EditorMain>\n      <EditorArea>\n        <Artboard />\n      </EditorArea>\n      <EditorBar>\n        <Settings />\n      </EditorBar>\n    </EditorMain>\n  );\n}\n","import { createGlobalStyle } from '../../styles/styledComponents';\nimport { typography } from '../../styles/typography';\n\nexport const GlobalStyles = createGlobalStyle`\n\n  ${typography};\n\n  html {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    background-color: ${props => props.theme.colors.main_400};\n    font-family: 'Open Sans', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport Switch, { ReactSwitchProps } from 'react-switch';\nimport { setTheme } from '../../store/application/actions';\nimport { bindActionCreators } from 'redux';\nimport { modularSize } from '../../styles/typography';\nimport styled from '../../styles/styledComponents';\nimport { AppTheme } from '../../styles/themes';\nimport { mediaMixin } from '../../styles/mixins';\nimport { rgba } from 'polished';\n\nconst SwitchWrapper = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n  padding: .5em;\n  box-sizing: border-box;\n  background-color: ${props => rgba(props.theme.colors.main_400, 0.5)};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.23);\n  border-radius: 4px;\n  ${props => mediaMixin(props.theme, {\n    sm: `\n      right: 10px;\n      top: 10px;\n    `,\n    md: `\n      left: 10px;\n      bottom: 10px;\n    `,\n  })}\n`;\n\ntype SwitchLabelProps = {\n  theme: AppTheme,\n  children: React.ReactNode,\n  htmlFor: string,\n};\n\nconst SwitchLabel = styled.label<SwitchLabelProps>`\n  color: ${props => props.theme.colors.text};\n  padding-right: 10px;\n  font-size: ${modularSize(-2)};\n  font-weight: bold;\n`;\n\ntype SwitchProps = {\n  theme: 'dark' | 'light',\n  onChange: (newTheme: 'light' | 'dark') => void,\n};\n\nclass SwitchComp extends React.PureComponent<ReactSwitchProps & SwitchProps> {\n\n  private changeHandler = () => {\n    const { theme, onChange } = this.props;\n    const newTheme: 'dark' | 'light' = theme === 'dark' ?\n      'light' : 'dark';\n    onChange(newTheme);\n  }\n\n  public render() {\n    const { theme } = this.props;\n    return (\n      <SwitchWrapper>\n        <SwitchLabel htmlFor=\"themeSwitch\">\n          Toggle theme\n        </SwitchLabel>\n        <Switch\n          id=\"themeSwitch\"\n          checked={theme === 'light'}\n          onChange={this.changeHandler}\n          className=\"themeSwitch\"\n          checkedIcon={false}\n          uncheckedIcon={false}\n          width={35}\n          height={20}\n          onColor=\"#5383D6\"\n          offColor=\"#A4BCAD\"\n        />\n      </SwitchWrapper>\n    );\n  }\n};\n\nconst mapStateToProps = (state: any) => ({\n  theme: state.application.theme,\n});\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators(\n  { onChange: setTheme }, \n  dispatch\n);\n\nexport const ThemeSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  // @ts-ignore\n)(SwitchComp);\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faChevronLeft,\n  faList,\n  faPaintRoller,\n  faCaretDown,\n  faCaretUp,\n  faPlus,\n  faSearch,\n  faTrash,\n  faEdit,\n  faCode,\n  faSave,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport { StoreThemeProvider } from './components/layout/StoreThemeProvider';\nimport { Editor } from './views/editor/Editor';\nimport { GlobalStyles } from './components/layout/GlobalStyles';\nimport { ThemeSwitch } from './components/layout/ThemeSwitch';\n\nlibrary.add(faChevronLeft);\nlibrary.add(faList);\nlibrary.add(faPaintRoller);\nlibrary.add(faCaretDown);\nlibrary.add(faCaretUp);\nlibrary.add(faPlus);\nlibrary.add(faSearch);\nlibrary.add(faTrash);\nlibrary.add(faEdit);\nlibrary.add(faCode);\nlibrary.add(faSave);\nlibrary.add(faTimes);\n\nconst App = () => (\n  <Provider store={store}>\n    <StoreThemeProvider>\n        <React.Fragment>\n          <Editor />\n          <ThemeSwitch />\n          <GlobalStyles />\n        </React.Fragment>\n    </StoreThemeProvider>\n  </Provider>\n);\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { fontFace } from './styles/fontFace';\n\nconst loadFonts = () => {\n  const head = document.getElementsByTagName('head')[0];\n  const style = document.createElement('style');\n  style.innerHTML = fontFace;\n  head.appendChild(style);\n};\n\nReactDOM.render(<App />, document.getElementById('root'), loadFonts);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","export const fontFace = `\n  /* fira-mono-regular - latin */\n  @font-face {\n    font-family: 'Fira Mono';\n    font-style: normal;\n    font-weight: 400;\n    src: local('Fira Mono Regular'), local('FiraMono-Regular'),\n        url('./fonts/fira-mono-v6-latin/fira-mono-v6-latin-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url('./fonts/fira-mono-v6-latin/fira-mono-v6-latin-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n  /* fira-mono-700 - latin */\n  @font-face {\n    font-family: 'Fira Mono';\n    font-style: normal;\n    font-weight: 700;\n    src: local('Fira Mono Bold'), local('FiraMono-Bold'),\n        url('./fonts/fira-mono-v6-latin/fira-mono-v6-latin-700.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url('./fonts/fira-mono-v6-latin/fira-mono-v6-latin-700.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n\n  /* open-sans-300 - latin */\n  @font-face {\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 300;\n    src: local('Open Sans Light'), local('OpenSans-Light'),\n        url('./fonts/open-sans-v15-latin/open-sans-v15-latin-300.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url('./fonts/open-sans-v15-latin/open-sans-v15-latin-300.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n  /* open-sans-regular - latin */\n  @font-face {\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 400;\n    src: local('Open Sans Regular'), local('OpenSans-Regular'),\n        url('./fonts/open-sans-v15-latin/open-sans-v15-latin-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url('./fonts/open-sans-v15-latin/open-sans-v15-latin-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n  /* open-sans-700 - latin */\n  @font-face {\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 700;\n    src: local('Open Sans Bold'), local('OpenSans-Bold'),\n        url('./fonts/open-sans-v15-latin/open-sans-v15-latin-700.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url('./fonts/open-sans-v15-latin/open-sans-v15-latin-700.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n`"],"sourceRoot":""}